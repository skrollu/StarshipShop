<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.6.3</version>
	<relativePath /> <!-- lookup parent from repository -->
</parent>
<groupId>com.example</groupId>
<artifactId>starshipShop</artifactId>
<version>0.0.1-SNAPSHOT</version>
<name>starshipShop</name>
<description>Demo project for Spring Boot</description>
<properties>
	<java.version>11</java.version>
	<org.mapstruct.version>1.5.0.Final</org.mapstruct.version>
	<org.hashids.version>1.0.3</org.hashids.version>
	<jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
	<sonar-maven-plugin.version>3.4.0.905</sonar-maven-plugin.version>
	<jacoco.utReportFolder>${project.build.directory}/jacoco/test</jacoco.utReportFolder>
	<jacoco.utReportFile>${jacoco.utReportFolder}/test.exec</jacoco.utReportFile>
	<jacoco.itReportFolder>${project.build.directory}/jacoco/integrationTest</jacoco.itReportFolder>
	<jacoco.itReportFile>${jacoco.itReportFolder}/integrationTest.exec</jacoco.itReportFile>
</properties>
<dependencies>
	
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-devtools</artifactId>
		<scope>runtime</scope>
		<optional>true</optional>
	</dependency>
	
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
	
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<scope>runtime</scope>
	</dependency>
	
	<dependency>
		<groupId>com.h2database</groupId>
		<artifactId>h2</artifactId>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-hateoas</artifactId>
	</dependency>
	
	<dependency>
		<groupId>org.projectlombok</groupId>
		<artifactId>lombok</artifactId>
		<optional>true</optional>
		<!-- <scope>provided</scope> -->
		<!-- Inherited from spring boot parent pom <version>${lombok.version}</version> -->
		<version>${lombok.version}</version>
	</dependency>
	
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-test</artifactId>
		<scope>test</scope>
	</dependency>
	
	<dependency>
		<groupId>org.mapstruct</groupId>
		<artifactId>mapstruct</artifactId>
		<version>${org.mapstruct.version}</version>
	</dependency>
	
	<dependency>
		<groupId>org.hashids</groupId>
		<artifactId>hashids</artifactId>
		<version>${org.hashids.version}</version>
	</dependency>
	
	<!-- TEST Dependencies-->
	<dependency>
		<groupId>org.jacoco</groupId>
		<artifactId>jacoco-maven-plugin</artifactId>
		<version>${jacoco-maven-plugin.version}</version>
	</dependency>
	
	<dependency>
		<groupId>org.sonarsource.scanner.maven</groupId>
		<artifactId>sonar-maven-plugin</artifactId>
		<version>${sonar-maven-plugin.version}</version>
	</dependency>
</dependencies>

<build>
	<plugins>
		<plugin>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-maven-plugin</artifactId>
			<configuration>
				<excludes>
					<exclude>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
					</exclude>
				</excludes>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			
			<configuration>
				<source>${java.version}</source>
				<target>${java.version}</target>
				<annotationProcessorPaths>
					<path>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
						<version>${lombok.version}</version>
					</path>
					<path>
						<groupId>org.mapstruct</groupId>
						<artifactId>mapstruct-processor</artifactId>
						<version>${org.mapstruct.version}</version>
					</path>
					<!-- other annotation processors -->
				</annotationProcessorPaths>
				<compilerArgs>
					<arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
					<arg>-Amapstruct.defaultComponentModel=spring</arg>
				</compilerArgs>
			</configuration>
		</plugin>
		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco-maven-plugin.version}</version>
			<executions>
				<!--  Prepares a property pointing to the JaCoCo runtime agent that can be passed as a VM argument to the application under test.-->
				<execution>
					<id>pre-unit-tests</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
					<configuration>
						
						<destFile>${jacoco.utReportFile}</destFile>
					</configuration>
				</execution>
				<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. Creates a code coverage report for tests of a single project in multiple formats (HTML, XML, and CSV). -->
				<execution>
					<id>post-unit-test</id>
					<phase>test</phase>
					<goals>
						<goal>report</goal>
					</goals>
					<configuration>
						<dataFile>${jacoco.utReportFile}</dataFile>
						<outputDirectory>${jacoco.utReportFolder}</outputDirectory>
					</configuration>
				</execution>
				<execution>
					<id>pre-integration-tests</id>
					<goals>
						<goal>prepare-agent-integration</goal>
					</goals>
					<configuration>
						<destFile>${jacoco.itReportFile}</destFile>
					</configuration>
				</execution>
				<execution>
					<id>post-integration-tests</id>
					<phase>post-integration-test</phase>
					<goals>
						<goal>report-integration</goal>
					</goals>
					<configuration>
						<dataFile>${jacoco.itReportFile}</dataFile>
						<outputDirectory>${jacoco.itReportFolder}</outputDirectory>
					</configuration>
				</execution>
			</executions>
		</plugin>
		<plugin>
			<groupId>org.sonarsource.scanner.maven</groupId>
			<artifactId>sonar-maven-plugin</artifactId>
			<version>${sonar-maven-plugin.version}</version>
		</plugin>
	</plugins>
</build>
<profiles>
	<profile>
		<id>dev</id>
		<properties>
			<activatedProperties>dev</activatedProperties>
		</properties>
		<activation>
			<activeByDefault>false</activeByDefault>
		</activation>
	</profile>
	<profile>
		<id>test</id>
		<properties>
			<activatedProperties>test</activatedProperties>
		</properties>
		<activation>
			<activeByDefault>false</activeByDefault>
		</activation>
	</profile>
</profiles>
</project>
