# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Step 1 - Checkout branch
              uses: actions/checkout@v3
            - name: Step 2 - Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: "11"
                  distribution: "temurin"
                  cache: maven
            - name: Step 3 - Build with Maven
              run: mvn -B package -Pdev -DskipTests --file backend/pom.xml
    test:
        runs-on: ubuntu-latest

        env:
            DB_DATABASE: starship_shop_test
            DB_USER: root
            DB_PASSWORD: root

        steps:
            - name: Step 1 - Checkout branch
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
            - name: Step 2 - Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: "11"
                  distribution: "temurin"
                  cache: maven
            - name: Step 3 - Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Step 4 - Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
            # MySQL 5.7 is pre-installed on Ubuntu 18.04 containers (and MySQL 8 on 20 and latest) No Service section is needed
            # Github official announcement: https://github.blog/changelog/2020-02-21-github-actions-breaking-change-ubuntu-virtual-environments-will-no-longer-start-the-mysql-service-automatically/
            - name: Step 5 - Set up MySQL
              run: |
                  sudo /etc/init.d/mysql start
                  mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
            - name: Step 6 - Run tests with Maven and analyze with sonar
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=skrollu_StarshipShop --file backend/pom.xml
